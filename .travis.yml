os: linux
dist: xenial

language: rust


_shared_job: &clippy_job
  script:
    # three scenarios for different sets of features
    - cargo clippy --all-targets --all-features -- -Dwarnings -W clippy::nursery
    - cargo clippy --all-targets -- -Dwarnings -W clippy::nursery
    - cargo clippy --all-targets --no-default-features -- -Dwarnings -W clippy::nursery
    # three scenarios for different sets of features (check only lib)
    - cargo clippy --lib --all-features -- -Dwarnings -W clippy::pedantic
    - cargo clippy --lib -- -Dwarnings -W clippy::pedantic
    - cargo clippy --lib --no-default-features -- -Dwarnings -W clippy::pedantic

jobs:
  allow_failures:
    - rust: nightly
  fast_finish: true
  include:
    - name: Minimal supported version
      rust: 1.39.0
    - <<: *clippy_job
      rust: stable
    - <<: *clippy_job
      rust: beta
    - <<: *clippy_job
      rust: nightly


cache:
  - cargo

install:
  - rustup component add rustfmt
  - rustup component add clippy
  - cargo install --force cargo-audit
  - cargo generate-lockfile

before_script:
  - cargo fmt -- --check
  - cargo test --all-features --workspace
  - cargo audit

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

after_success:
  - wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz && tar xzf master.tar.gz
  - cd kcov-master && mkdir build && cd build
  - cmake .. && make && make install DESTDIR=../../kcov-build
  - cd ../.. && rm -rf kcov-master master.tar.gz
  - >
    for file in target/debug/*-*; do
      [ -x "${file}" ] || continue;
      echo "Running coverage for $file...";
      mkdir -p "target/cov/$(basename $file)";
      ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file";
    done

  - bash <(curl -s https://codecov.io/bash)
  - echo "Uploaded code coverage"
